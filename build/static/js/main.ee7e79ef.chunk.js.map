{"version":3,"sources":["data/reducers/loginReducer.js","data/store.js","utils/xhr.js","components/authorized.js","components/mock-browser/index.js","components/pages/LoginPage.js","components/layouts/UnauthorizedLayout.js","components/ui/PrimaryHeader.js","components/pages/AppHomePage.js","components/layouts/NoteBookLayout.js","components/layouts/AnotherLayout.js","components/layouts/PrimaryLayout.js","app.js","serviceWorker.js","index.js"],"names":["initialState","logged","pending","rootReducer","login","state","arguments","length","undefined","action","type","Object","assign","reducer","combineReducers","store","createStore","Promise","resolve","reject","setTimeout","dispatch","AuthorizedRoute","connect","_this$props","this","props","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","render","Redirect","to","MockBrowser","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","path","target","value","onKeyPress","key","history","push","location","pathname","newProps","_this$props$history","goForward","goBack","className","onClick","withRouter","LoginPage","then","Link","UnauthorizedLayout","Switch","PrimaryHeader","NavLink","exact","activeClassName","AppHomePage","_ref","NoteBookLayout","AnotherLayout","PrimaryLayout","match","console","log","components_ui_PrimaryHeader","concat","url","App","es","HashRouter","components_mock_browser","authorized","Boolean","window","hostname","ReactDOM","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee7e79ef.chunk.js","sourcesContent":["const initialState={\r\n    logged:false,\r\n    pending: true,\r\n}\r\nlet loginReducer=(\r\n    state=initialState\r\n    ,action\r\n    )=>{\r\n    switch(action.type){\r\n        case 'GET_LOGGED_USER' :\r\n            return Object.assign({},state,{pending:false})\r\n        case 'SET_LOGGED_USER' :\r\n            return Object.assign({},state,{\r\n                pending:false,\r\n                logged:action.logged\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default loginReducer","import {createStore,combineReducers} from 'redux'\r\nimport loginReducer from './reducers/loginReducer'\r\n\r\nlet rootReducer={\r\n    login:loginReducer\r\n}\r\nlet reducer=combineReducers(rootReducer)\r\nconst store=createStore(reducer)\r\nexport default store ","import store from '../data/store'\r\nexport const getLoggedUser = () => {\r\n    setTimeout(() => {\r\n      store.dispatch({\r\n        type: 'GET_LOGGED_USER'\r\n      })\r\n    }, 500)\r\n  }\r\nexport const login = () => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        store.dispatch({\r\n          type: 'SET_LOGGED_USER',\r\n          logged: true\r\n        })\r\n        resolve()\r\n      }, 500)\r\n    })\r\n  }\r\n  \r\nexport const logout = () => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        store.dispatch({\r\n          type: 'SET_LOGGED_USER',\r\n          logged: false\r\n        })\r\n        resolve()\r\n      }, 500)\r\n    })\r\n  }","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport{getLoggedUser}from '../utils/xhr'\r\nimport {Redirect,Route} from 'react-router-dom'\r\n\r\n@connect(\r\n    (state)=>{\r\n       return{\r\n           logged:state.login.logged,\r\n           pending:state.login.pending\r\n        } \r\n    },\r\n    (dispatch)=>{\r\n        return{dispatch:dispatch}\r\n    }\r\n)\r\nclass AuthorizedRoute extends Component{\r\n    componentWillMount() {\r\n        getLoggedUser()\r\n    }\r\n    render(){\r\n         const{component: Component,pending,logged, ...rest}=this.props\r\n         return (\r\n            <Route {...rest} render={props => {\r\n              if (pending) return <div>Loading...</div>\r\n              return logged\r\n                ? <Component {...props} />\r\n                : <Redirect to=\"/auth/login\" />\r\n            }} />\r\n          )\r\n        // //console.log(this.props)\r\n        // if(pending){return(<div>Loading...</div>)}\r\n        // return(\r\n        //     logged\r\n        //     ?  <Component {...this.props}/>\r\n        //     :  <Redirect to=\"/auth/login\" />\r\n        // )\r\n    }\r\n}\r\nexport default AuthorizedRoute","import React,{Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport \"./index.css\"\r\n\r\nclass MockBrowser extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            path:\"\",\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.setState({\r\n            path:this.props.location.pathname\r\n        })\r\n    }\r\n    componentWillReceiveProps(newProps){\r\n      \r\n       // console.log(newProps)\r\n        this.setState({\r\n            path:newProps.location.pathname\r\n        })\r\n       \r\n    }\r\n    onChange=(e)=>{\r\n        this.setState({\r\n            path:e.target.value\r\n        })\r\n    }\r\n    onKeyPress=(e)=>{\r\n       // console.log(\"e.key:\")\r\n       // console.log(e.key)\r\n        if(e.key===\"Enter\"){\r\n           // console.log(this.state.path)\r\n            this.props.history.push(this.state.path)\r\n        }\r\n    }\r\n    render(){\r\n        //console.log(\"MockBrowser组件render\")\r\n       // console.log(this.props.location)\r\n        // console.log(this.props.history.go)\r\n        const { goForward, goBack } = this.props.history\r\n        return (\r\n            <div className=\"MockBrowser\">\r\n                <nav>\r\n                    <button className=\"outline\" onClick={goBack}>后退</button>\r\n                    <button className=\"outline\" onClick={goForward}>前进</button>\r\n                </nav>\r\n                <div className=\"path\">\r\n                    <div className=\"example\">http://example.com</div>\r\n                    <div className=\"inputWrapper\">\r\n                        <input \r\n                        type=\"text\" \r\n                        value={this.state.path} \r\n                        onChange={this.onChange}\r\n                        onKeyPress={this.onKeyPress}\r\n                        />\r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(MockBrowser)\r\n/**\r\n * react-router 提供了一个withRouter组件 \r\n * withRouter可以包装任何自定义组件，将react-router 的 history,location,match 三个对象传入。 \r\n * 无需一级级传递react-router 的属性，当需要用的router 属性的时候，将组件包一层withRouter，\r\n * 就可以拿到需要的路由信息\r\n * \r\n * 正常情况下 只有Router 的component组件能够自动带有三个属性. \r\n *  */","import React,{Component} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {login} from '../../utils/xhr'\r\n\r\nclass LoginPage extends Component{\r\n    login=()=>{\r\n        login().then(\r\n            ()=>{\r\n                this.props.history.push('/app')\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            <h1>Login Page</h1>\r\n            <p>\r\n                我们无法直接进入<Link to=\"/app\">/app</Link>页面，我们必须先登录\r\n            </p>\r\n            <button onClick={this.login}>\r\n                登录\r\n            </button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default LoginPage","import React,{Component} from 'react'\r\nimport {Switch,Route,Redirect}from 'react-router-dom'\r\nimport LoginPage from '../pages/LoginPage'\r\n\r\nclass UnauthorizedLayout extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"unauthorized-layout\">\r\n                <div>UnauthorizedLayout组件（登录页面）</div>\r\n                <Switch>\r\n                 <Route path=\"/auth/login\" component={LoginPage} />\r\n                 <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UnauthorizedLayout","import React,{Component} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport './PrimaryHeader.css'\r\nclass PrimaryHeader extends Component{\r\n    render(){\r\n        return(\r\n            <header className=\"primary-header\">\r\n              <h3>欢迎来到我的小demo!</h3>\r\n              <nav>\r\n                <NavLink to=\"/app\" exact activeClassName=\"active\">Home</NavLink>\r\n                <NavLink to=\"/app/notebook\" activeClassName=\"active\">notebook</NavLink>\r\n                <NavLink to=\"/app/another\" activeClassName=\"active\">another</NavLink>\r\n              </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default PrimaryHeader","import React from 'react'\r\nimport { logout } from '../../utils/xhr'\r\n\r\nconst AppHomePage = ({ history }) => (\r\n  <div>\r\n    App Home Page\r\n    <br /><br />\r\n    <button onClick={() => {\r\n      logout().then(() => {\r\n        history.push('/')\r\n      })\r\n    }}>Logout</button>\r\n  </div>\r\n)\r\n\r\nexport default AppHomePage","import React,{Component} from 'react'\r\nclass NoteBookLayout extends Component{\r\n    render(){\r\n        return(\r\n            <div>notebook...</div>\r\n        )\r\n    }\r\n}\r\nexport default NoteBookLayout","import React,{Component} from 'react'\r\nclass AnotherLayout extends Component{\r\n    render(){\r\n        return(\r\n            <div>anotherLayout</div>\r\n        )\r\n    }\r\n}\r\nexport default AnotherLayout","import React ,{Component}from 'react'\r\nimport {Switch,Route,Redirect}from 'react-router-dom'\r\n\r\nimport PrimaryHeader from '../ui/PrimaryHeader'\r\n\r\nimport AppHomePage from '../pages/AppHomePage'\r\nimport NoteBookLayout from './NoteBookLayout'\r\nimport AnotherLayout from './AnotherLayout'\r\n\r\nclass PrimaryLayout extends Component{\r\n    render(){\r\n        const {match}=this.props\r\n        console.log(this.props)\r\n        return(\r\n            <div className=\"primary\">\r\n                 <PrimaryHeader />\r\n                 <main>\r\n                    <Switch>\r\n                        <Route path={`${match.path}`}  exact component={AppHomePage}/>\r\n                        <Route path={`${match.path}/notebook`} component={NoteBookLayout}/>\r\n                        <Route path={`${match.path}/another`} component={AnotherLayout} />\r\n                        <Redirect to={`${match.url}`} />\r\n                    </Switch>\r\n                 </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrimaryLayout","import React,{Component} from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport store from './data/store'\r\nimport {HashRouter,Redirect,Switch,Route} from 'react-router-dom'\r\nimport AuthorizedRoute from './components/authorized'\r\nimport MockBrowser from './components/mock-browser/index'\r\n\r\nimport UnauthorizedLayout from './components/layouts/UnauthorizedLayout'\r\nimport PrimaryLayout from './components/layouts/PrimaryLayout'\r\n\r\nexport default class App extends Component {\r\n    render(){\r\n       return (\r\n           <Provider store={store}> \r\n                <HashRouter>   \r\n                    <div>\r\n                        <MockBrowser/>\r\n                        <Switch>\r\n                            <Route path=\"/auth\" component={UnauthorizedLayout}/>\r\n                            <AuthorizedRoute path=\"/app\" component={PrimaryLayout}/>\r\n                            <Redirect to=\"/auth\" />\r\n                        </Switch>\r\n                    </div>\r\n                </HashRouter>  \r\n           </Provider>\r\n      ) \r\n    }\r\n}\r\n\r\n\r\n\r\n//1.<BrowserRouter></BrowserRouter> 里面只能有一个child！多个组件请用一个div包裹起来。\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './default.css'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\nserviceWorker.unregister();"],"sourceRoot":""}